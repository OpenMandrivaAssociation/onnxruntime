diff -up onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake.11~ onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake
--- onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake.11~	2025-10-05 19:52:09.393193712 +0200
+++ onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake	2025-10-05 19:53:59.255582675 +0200
@@ -257,33 +257,8 @@ endif()
 set(ENABLE_DATE_TESTING  OFF CACHE BOOL "" FORCE)
 set(USE_SYSTEM_TZ_DB  ON CACHE BOOL "" FORCE)
 
-onnxruntime_fetchcontent_declare(
-  date
-  URL ${DEP_URL_date}
-  URL_HASH SHA1=${DEP_SHA1_date}
-  EXCLUDE_FROM_ALL
-  FIND_PACKAGE_ARGS 3...<4 NAMES date
-)
-onnxruntime_fetchcontent_makeavailable(date)
-
-if(NOT TARGET Boost::mp11)
-  if(onnxruntime_USE_VCPKG)
-     find_package(Boost REQUIRED)
-     message(STATUS "Aliasing Boost::headers to Boost::mp11")
-     add_library(Boost::mp11 ALIAS Boost::headers)
-  else()
-    onnxruntime_fetchcontent_declare(
-     mp11
-     URL ${DEP_URL_mp11}
-     EXCLUDE_FROM_ALL
-     FIND_PACKAGE_ARGS NAMES Boost
-    )
-    onnxruntime_fetchcontent_makeavailable(mp11)    
-    if(NOT TARGET Boost::mp11)
-      add_library(Boost::mp11 ALIAS Boost::headers)
-    endif()
-  endif()
-endif()
+find_package(date)
+find_package(Boost REQUIRED)
 
 set(JSON_BuildTests OFF CACHE INTERNAL "")
 set(JSON_Install OFF CACHE INTERNAL "")
@@ -526,7 +501,7 @@ if (onnxruntime_USE_XNNPACK)
 endif()
 
 set(onnxruntime_EXTERNAL_LIBRARIES ${onnxruntime_EXTERNAL_LIBRARIES_XNNPACK} nlohmann_json::nlohmann_json
-                                   onnx onnx_proto ${PROTOBUF_LIB} re2::re2 Boost::mp11 safeint_interface
+                                   onnx onnx_proto ${PROTOBUF_LIB} re2::re2 Boost::boost safeint_interface
                                    flatbuffers::flatbuffers ${GSL_TARGET} ${ABSEIL_LIBS} date::date
                                    ${ONNXRUNTIME_CLOG_TARGET_NAME} Eigen3::Eigen)
 
diff -up onnxruntime-1.21.1/cmake/onnxruntime_framework.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_framework.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_framework.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_framework.cmake	2025-10-05 19:55:13.195254140 +0200
@@ -84,7 +84,7 @@ endif()
 if (onnxruntime_ENABLE_ATEN)
   onnxruntime_add_include_to_target(onnxruntime_framework dlpack::dlpack)
 endif()
-onnxruntime_add_include_to_target(onnxruntime_framework onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::mp11 nlohmann_json::nlohmann_json Eigen3::Eigen)
+onnxruntime_add_include_to_target(onnxruntime_framework onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::boost nlohmann_json::nlohmann_json Eigen3::Eigen)
 
 if (onnxruntime_USE_MIMALLOC)
     onnxruntime_add_include_to_target(onnxruntime_framework mimalloc-static)
diff -up onnxruntime-1.21.1/cmake/onnxruntime_opschema_lib.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_opschema_lib.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_opschema_lib.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_opschema_lib.cmake	2025-10-05 19:52:09.415041906 +0200
@@ -27,10 +27,10 @@ target_compile_options(ort_opschema_lib
 if(NOT MSVC)
   target_compile_options(ort_opschema_lib PRIVATE "-Wno-parentheses")
 endif()
-set (OPSCHEMA_LIB_DEPENDENCIES onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::mp11 safeint_interface)
+set (OPSCHEMA_LIB_DEPENDENCIES onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::boost safeint_interface)
 
 # ${CMAKE_CURRENT_BINARY_DIR} is so that #include "onnxruntime_config.h" is found
 target_include_directories(ort_opschema_lib PRIVATE ${ONNXRUNTIME_ROOT} ${ORTTRAINING_ROOT} ${CMAKE_CURRENT_BINARY_DIR})
-onnxruntime_add_include_to_target(ort_opschema_lib onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+onnxruntime_add_include_to_target(ort_opschema_lib onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface)
 add_dependencies(ort_opschema_lib ${OPSCHEMA_LIB_DEPENDENCIES})
 
diff -up onnxruntime-1.21.1/cmake/onnxruntime_optimizer.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_optimizer.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_optimizer.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_optimizer.cmake	2025-10-05 19:52:09.415074758 +0200
@@ -112,7 +112,7 @@ endif()
 
 onnxruntime_add_static_library(onnxruntime_optimizer ${onnxruntime_optimizer_srcs})
 
-onnxruntime_add_include_to_target(onnxruntime_optimizer onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+onnxruntime_add_include_to_target(onnxruntime_optimizer onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface)
 target_include_directories(onnxruntime_optimizer PRIVATE ${ONNXRUNTIME_ROOT})
 if (onnxruntime_ENABLE_TRAINING)
   target_include_directories(onnxruntime_optimizer PRIVATE ${ORTTRAINING_ROOT})
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_acl.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_acl.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_acl.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_acl.cmake	2025-10-05 19:55:28.457342761 +0200
@@ -10,7 +10,7 @@
   source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_providers_acl_cc_srcs})
   onnxruntime_add_static_library(onnxruntime_providers_acl ${onnxruntime_providers_acl_cc_srcs})
   onnxruntime_add_include_to_target(onnxruntime_providers_acl
-    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface Eigen3::Eigen
+    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface Eigen3::Eigen
   )
 
   target_link_libraries(onnxruntime_providers_acl -L$ENV{LD_LIBRARY_PATH})
@@ -31,4 +31,4 @@
             LIBRARY   DESTINATION ${CMAKE_INSTALL_LIBDIR}
             RUNTIME   DESTINATION ${CMAKE_INSTALL_BINDIR}
             FRAMEWORK DESTINATION ${CMAKE_INSTALL_BINDIR})
-  endif()
\ No newline at end of file
+  endif()
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_armnn.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_armnn.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_armnn.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_armnn.cmake	2025-10-05 19:55:51.169471724 +0200
@@ -10,7 +10,7 @@
   source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_providers_armnn_cc_srcs})
   onnxruntime_add_static_library(onnxruntime_providers_armnn ${onnxruntime_providers_armnn_cc_srcs})
   onnxruntime_add_include_to_target(onnxruntime_providers_armnn
-    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface Eigen3::Eigen
+    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface Eigen3::Eigen
   )
 
   add_dependencies(onnxruntime_providers_armnn ${onnxruntime_EXTERNAL_DEPENDENCIES})
@@ -30,4 +30,4 @@
             LIBRARY   DESTINATION ${CMAKE_INSTALL_LIBDIR}
             RUNTIME   DESTINATION ${CMAKE_INSTALL_BINDIR}
             FRAMEWORK DESTINATION ${CMAKE_INSTALL_BINDIR})
-  endif()
\ No newline at end of file
+  endif()
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_azure.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_azure.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_azure.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_azure.cmake	2025-10-05 19:52:09.415216756 +0200
@@ -8,7 +8,7 @@
   source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_providers_azure_src})
   onnxruntime_add_static_library(onnxruntime_providers_azure ${onnxruntime_providers_azure_src})
   add_dependencies(onnxruntime_providers_azure ${onnxruntime_EXTERNAL_DEPENDENCIES})
-  onnxruntime_add_include_to_target(onnxruntime_providers_azure onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11)
+  onnxruntime_add_include_to_target(onnxruntime_providers_azure onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost)
   target_link_libraries(onnxruntime_providers_azure PRIVATE onnx onnxruntime_common onnxruntime_framework)
   set_target_properties(onnxruntime_providers_azure PROPERTIES FOLDER "ONNXRuntime")
   set_target_properties(onnxruntime_providers_azure PROPERTIES LINKER_LANGUAGE CXX)
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_cann.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_cann.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_cann.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_cann.cmake	2025-10-05 19:56:17.596653489 +0200
@@ -18,7 +18,7 @@
   set(onnxruntime_providers_cann_src ${onnxruntime_providers_cann_cc_srcs} ${onnxruntime_providers_cann_shared_srcs})
 
   onnxruntime_add_shared_library_module(onnxruntime_providers_cann ${onnxruntime_providers_cann_src})
-  onnxruntime_add_include_to_target(onnxruntime_providers_cann onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+  onnxruntime_add_include_to_target(onnxruntime_providers_cann onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface)
 
   add_dependencies(onnxruntime_providers_cann onnxruntime_providers_shared ${onnxruntime_EXTERNAL_DEPENDENCIES})
   target_link_libraries(onnxruntime_providers_cann PRIVATE Eigen3::Eigen ascendcl acl_op_compiler fmk_onnx_parser  ${ABSEIL_LIBS} ${ONNXRUNTIME_PROVIDERS_SHARED})
@@ -31,4 +31,4 @@
   install(TARGETS onnxruntime_providers_cann
           ARCHIVE  DESTINATION ${CMAKE_INSTALL_LIBDIR}
           LIBRARY  DESTINATION ${CMAKE_INSTALL_LIBDIR}
-          RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR})
\ No newline at end of file
+          RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR})
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_coreml.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_coreml.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_coreml.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_coreml.cmake	2025-10-05 19:56:32.862916931 +0200
@@ -151,7 +151,7 @@ onnxruntime_add_static_library(onnxrunti
 )
 
 onnxruntime_add_include_to_target(onnxruntime_providers_coreml
-  onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11
+  onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost
   safeint_interface nlohmann_json::nlohmann_json
 )
 
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_cpu.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_cpu.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_cpu.cmake.11~	2025-10-05 19:52:09.398345117 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_cpu.cmake	2025-10-05 19:52:09.415370897 +0200
@@ -155,7 +155,7 @@ if (MSVC)
 #      target_compile_options(onnxruntime_providers PRIVATE "/wd4244")
 #   endif()
 endif()
-onnxruntime_add_include_to_target(onnxruntime_providers onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+onnxruntime_add_include_to_target(onnxruntime_providers onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface)
 
 if (onnxruntime_BUILD_MS_EXPERIMENTAL_OPS)
   target_compile_definitions(onnxruntime_providers PRIVATE BUILD_MS_EXPERIMENTAL_OPS=1)
@@ -241,7 +241,7 @@ if (NOT onnxruntime_MINIMAL_BUILD AND NO
 
 
   # On Apple/Unix we don't directly link with this library as we load it with RTLD_GLOBAL, so this is only set to the actual library on WIN32
-  # But, in exchange we need to manually add Boost::mp11 to include dirs for every EP.
+  # But, in exchange we need to manually add Boost::boost to include dirs for every EP.
   # It is because "provider_api.h" includes core/framework/op_kernel.h which includes op_kernel.h which includes "boost/mp11.hpp"
   set(ONNXRUNTIME_PROVIDERS_SHARED)
 
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_cuda.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_cuda.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_cuda.cmake.11~	2025-10-05 19:52:09.398425058 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_cuda.cmake	2025-10-05 19:52:09.415424068 +0200
@@ -206,7 +206,7 @@
     add_dependencies(${target} onnxruntime_providers_shared ${onnxruntime_EXTERNAL_DEPENDENCIES})
     if(onnxruntime_CUDA_MINIMAL)
       target_compile_definitions(${target} PRIVATE USE_CUDA_MINIMAL)
-      target_link_libraries(${target} PRIVATE ${ABSEIL_LIBS} ${ONNXRUNTIME_PROVIDERS_SHARED} Boost::mp11 safeint_interface CUDA::cudart)
+      target_link_libraries(${target} PRIVATE ${ABSEIL_LIBS} ${ONNXRUNTIME_PROVIDERS_SHARED} Boost::boost safeint_interface CUDA::cudart)
     else()
       include(cudnn_frontend) # also defines CUDNN::*
       if (onnxruntime_USE_CUDA_NHWC_OPS)
@@ -217,7 +217,7 @@
         endif()
       endif()
       target_link_libraries(${target} PRIVATE CUDA::cublasLt CUDA::cublas CUDNN::cudnn_all cudnn_frontend CUDA::curand CUDA::cufft CUDA::cudart
-              ${ABSEIL_LIBS} ${ONNXRUNTIME_PROVIDERS_SHARED} Boost::mp11 safeint_interface)
+              ${ABSEIL_LIBS} ${ONNXRUNTIME_PROVIDERS_SHARED} Boost::boost safeint_interface)
     endif()
 
     if (onnxruntime_USE_TRITON_KERNEL)
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_dml.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_dml.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_dml.cmake.11~	2025-10-05 19:52:09.387943571 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_dml.cmake	2025-10-05 19:56:43.621599353 +0200
@@ -9,7 +9,7 @@
   source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_providers_dml_cc_srcs})
   onnxruntime_add_static_library(onnxruntime_providers_dml ${onnxruntime_providers_dml_cc_srcs})
   onnxruntime_add_include_to_target(onnxruntime_providers_dml
-    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface
+    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface
   )
   if(TARGET Microsoft::DirectX-Headers)
     onnxruntime_add_include_to_target(onnxruntime_providers_dml Microsoft::DirectX-Headers)
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_dnnl.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_dnnl.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_dnnl.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_dnnl.cmake	2025-10-05 19:56:56.918030009 +0200
@@ -19,7 +19,7 @@
   add_dependencies(onnxruntime_providers_dnnl onnxruntime_providers_shared project_dnnl ${onnxruntime_EXTERNAL_DEPENDENCIES})
   target_include_directories(onnxruntime_providers_dnnl PRIVATE ${ONNXRUNTIME_ROOT} ${DNNL_INCLUDE_DIR} ${DNNL_OCL_INCLUDE_DIR})
   # ${CMAKE_CURRENT_BINARY_DIR} is so that #include "onnxruntime_config.h" inside tensor_shape.h is found
-  target_link_libraries(onnxruntime_providers_dnnl PRIVATE dnnl ${ONNXRUNTIME_PROVIDERS_SHARED} Boost::mp11 ${ABSEIL_LIBS} ${GSL_TARGET} safeint_interface Eigen3::Eigen)
+  target_link_libraries(onnxruntime_providers_dnnl PRIVATE dnnl ${ONNXRUNTIME_PROVIDERS_SHARED} Boost::boost ${ABSEIL_LIBS} ${GSL_TARGET} safeint_interface Eigen3::Eigen)
   install(FILES ${PROJECT_SOURCE_DIR}/../include/onnxruntime/core/providers/dnnl/dnnl_provider_options.h
     DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/onnxruntime/)
   set_target_properties(onnxruntime_providers_dnnl PROPERTIES FOLDER "ONNXRuntime")
@@ -52,4 +52,4 @@
   install(TARGETS onnxruntime_providers_dnnl
           ARCHIVE  DESTINATION ${CMAKE_INSTALL_LIBDIR}
           LIBRARY  DESTINATION ${CMAKE_INSTALL_LIBDIR}
-          RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR})
\ No newline at end of file
+          RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR})
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_js.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_js.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_js.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_js.cmake	2025-10-05 19:57:09.919680429 +0200
@@ -19,7 +19,7 @@
   source_group(TREE ${ONNXRUNTIME_ROOT} FILES ${onnxruntime_providers_js_cc_srcs})
   onnxruntime_add_static_library(onnxruntime_providers_js ${onnxruntime_providers_js_cc_srcs})
   onnxruntime_add_include_to_target(onnxruntime_providers_js
-    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers Boost::mp11 Eigen3::Eigen
+    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers Boost::boost Eigen3::Eigen
   )
 
   add_dependencies(onnxruntime_providers_js ${onnxruntime_EXTERNAL_DEPENDENCIES})
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_migraphx.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_migraphx.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_migraphx.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_migraphx.cmake	2025-10-05 19:52:09.415669441 +0200
@@ -41,9 +41,9 @@
   )
   source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_providers_migraphx_cc_srcs})
   onnxruntime_add_shared_library_module(onnxruntime_providers_migraphx ${onnxruntime_providers_migraphx_cc_srcs})
-  onnxruntime_add_include_to_target(onnxruntime_providers_migraphx onnxruntime_common onnx flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+  onnxruntime_add_include_to_target(onnxruntime_providers_migraphx onnxruntime_common onnx flatbuffers::flatbuffers Boost::boost safeint_interface)
   add_dependencies(onnxruntime_providers_migraphx onnxruntime_providers_shared ${onnxruntime_EXTERNAL_DEPENDENCIES})
-  target_link_libraries(onnxruntime_providers_migraphx PRIVATE ${migraphx_libs} ${ONNXRUNTIME_PROVIDERS_SHARED} onnx flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+  target_link_libraries(onnxruntime_providers_migraphx PRIVATE ${migraphx_libs} ${ONNXRUNTIME_PROVIDERS_SHARED} onnx flatbuffers::flatbuffers Boost::boost safeint_interface)
   target_include_directories(onnxruntime_providers_migraphx PRIVATE ${ONNXRUNTIME_ROOT} ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_BINARY_DIR}/amdgpu/onnxruntime)
   set_target_properties(onnxruntime_providers_migraphx PROPERTIES LINKER_LANGUAGE CXX)
   set_target_properties(onnxruntime_providers_migraphx PROPERTIES FOLDER "ONNXRuntime")
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_nnapi.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_nnapi.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_nnapi.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_nnapi.cmake	2025-10-05 19:52:09.415697334 +0200
@@ -60,7 +60,7 @@
   source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_providers_nnapi_cc_srcs})
   onnxruntime_add_static_library(onnxruntime_providers_nnapi ${onnxruntime_providers_nnapi_cc_srcs})
   onnxruntime_add_include_to_target(onnxruntime_providers_nnapi
-    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface
+    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface
   )
   target_link_libraries(onnxruntime_providers_nnapi)
   add_dependencies(onnxruntime_providers_nnapi onnx ${onnxruntime_EXTERNAL_DEPENDENCIES})
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_openvino.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_openvino.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_openvino.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_openvino.cmake	2025-10-05 19:57:20.430742516 +0200
@@ -48,7 +48,7 @@
   endif()
   add_dependencies(onnxruntime_providers_openvino onnxruntime_providers_shared ${onnxruntime_EXTERNAL_DEPENDENCIES})
   target_include_directories(onnxruntime_providers_openvino SYSTEM PUBLIC ${ONNXRUNTIME_ROOT} ${CMAKE_CURRENT_BINARY_DIR} ${OpenVINO_INCLUDE_DIR} ${OPENVINO_INCLUDE_DIR_LIST} ${PYTHON_INCLUDE_DIRS} $ENV{OPENCL_INCS} $ENV{OPENCL_INCS}/../../cl_headers/)
-  target_link_libraries(onnxruntime_providers_openvino ${ONNXRUNTIME_PROVIDERS_SHARED} Boost::mp11 ${OPENVINO_LIB_LIST} ${ABSEIL_LIBS} Eigen3::Eigen)
+  target_link_libraries(onnxruntime_providers_openvino ${ONNXRUNTIME_PROVIDERS_SHARED} Boost::boost ${OPENVINO_LIB_LIST} ${ABSEIL_LIBS} Eigen3::Eigen)
 
   target_compile_definitions(onnxruntime_providers_openvino PRIVATE FILE_NAME=\"onnxruntime_providers_openvino.dll\")
 
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_qnn.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_qnn.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_qnn.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_qnn.cmake	2025-10-05 19:57:33.297432645 +0200
@@ -22,7 +22,7 @@
     onnxruntime_add_static_library(onnxruntime_providers_qnn ${onnxruntime_providers_qnn_srcs})
     onnxruntime_add_include_to_target(onnxruntime_providers_qnn onnxruntime_common onnxruntime_framework onnx
                                                                 onnx_proto protobuf::libprotobuf-lite
-                                                                flatbuffers::flatbuffers Boost::mp11
+                                                                flatbuffers::flatbuffers Boost::boost
 								nlohmann_json::nlohmann_json)
     add_dependencies(onnxruntime_providers_qnn onnx ${onnxruntime_EXTERNAL_DEPENDENCIES})
     set_target_properties(onnxruntime_providers_qnn PROPERTIES CXX_STANDARD_REQUIRED ON)
@@ -51,7 +51,7 @@
     source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_providers_qnn_srcs})
     onnxruntime_add_shared_library_module(onnxruntime_providers_qnn ${onnxruntime_providers_qnn_srcs})
     onnxruntime_add_include_to_target(onnxruntime_providers_qnn ${ONNXRUNTIME_PROVIDERS_SHARED} ${GSL_TARGET} onnx
-	                                                        onnxruntime_common Boost::mp11 safeint_interface
+	                                                        onnxruntime_common Boost::boost safeint_interface
 								nlohmann_json::nlohmann_json)
     target_link_libraries(onnxruntime_providers_qnn PRIVATE ${ONNXRUNTIME_PROVIDERS_SHARED} ${ABSEIL_LIBS} ${CMAKE_DL_LIBS})
     add_dependencies(onnxruntime_providers_qnn onnxruntime_providers_shared ${onnxruntime_EXTERNAL_DEPENDENCIES})
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_rknpu.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_rknpu.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_rknpu.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_rknpu.cmake	2025-10-05 19:52:09.415814264 +0200
@@ -24,7 +24,7 @@
   source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_providers_rknpu_cc_srcs})
   onnxruntime_add_static_library(onnxruntime_providers_rknpu ${onnxruntime_providers_rknpu_cc_srcs})
   onnxruntime_add_include_to_target(onnxruntime_providers_rknpu
-    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface
+    onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface
   )
   target_link_libraries(onnxruntime_providers_rknpu PRIVATE -lrknpu_ddk)
   add_dependencies(onnxruntime_providers_rknpu onnx ${onnxruntime_EXTERNAL_DEPENDENCIES})
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_rocm.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_rocm.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_rocm.cmake.11~	2025-10-05 19:52:09.398493777 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_rocm.cmake	2025-10-05 19:52:09.415841065 +0200
@@ -124,7 +124,7 @@
     target_compile_options(onnxruntime_providers_rocm PRIVATE -Wno-undefined-var-template)
   endif()
 
-  onnxruntime_add_include_to_target(onnxruntime_providers_rocm onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+  onnxruntime_add_include_to_target(onnxruntime_providers_rocm onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface)
   if (onnxruntime_ENABLE_TRAINING_OPS)
     onnxruntime_add_include_to_target(onnxruntime_providers_rocm onnxruntime_training)
     target_link_libraries(onnxruntime_providers_rocm PRIVATE onnxruntime_training)
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_tensorrt.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_tensorrt.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_tensorrt.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_tensorrt.cmake	2025-10-05 19:57:52.348741078 +0200
@@ -176,10 +176,10 @@
   source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_providers_tensorrt_cc_srcs})
   onnxruntime_add_shared_library_module(onnxruntime_providers_tensorrt ${onnxruntime_providers_tensorrt_cc_srcs})
   onnxruntime_add_include_to_target(onnxruntime_providers_tensorrt onnxruntime_common)
-  target_link_libraries(onnxruntime_providers_tensorrt PRIVATE Eigen3::Eigen  onnx flatbuffers::flatbuffers Boost::mp11 safeint_interface Eigen3::Eigen)
+  target_link_libraries(onnxruntime_providers_tensorrt PRIVATE Eigen3::Eigen  onnx flatbuffers::flatbuffers Boost::boost safeint_interface Eigen3::Eigen)
   add_dependencies(onnxruntime_providers_tensorrt onnxruntime_providers_shared ${onnxruntime_EXTERNAL_DEPENDENCIES})
   if (onnxruntime_USE_TENSORRT_BUILTIN_PARSER)
-    target_link_libraries(onnxruntime_providers_tensorrt PRIVATE ${trt_link_libs} ${ONNXRUNTIME_PROVIDERS_SHARED} ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface ${ABSEIL_LIBS} PUBLIC CUDA::cudart)
+    target_link_libraries(onnxruntime_providers_tensorrt PRIVATE ${trt_link_libs} ${ONNXRUNTIME_PROVIDERS_SHARED} ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface ${ABSEIL_LIBS} PUBLIC CUDA::cudart)
   else()
     target_link_libraries(onnxruntime_providers_tensorrt PRIVATE ${onnxparser_link_libs} ${trt_link_libs} ${ONNXRUNTIME_PROVIDERS_SHARED} ${PROTOBUF_LIB} flatbuffers::flatbuffers ${ABSEIL_LIBS} PUBLIC CUDA::cudart)
   endif()
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_webnn.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_webnn.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_webnn.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_webnn.cmake	2025-10-05 19:52:09.415950822 +0200
@@ -18,7 +18,7 @@
 
   source_group(TREE ${REPO_ROOT} FILES ${onnxruntime_providers_webnn_cc_srcs})
   onnxruntime_add_static_library(onnxruntime_providers_webnn ${onnxruntime_providers_webnn_cc_srcs})
-  onnxruntime_add_include_to_target(onnxruntime_providers_webnn onnxruntime_common onnx onnx_proto flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+  onnxruntime_add_include_to_target(onnxruntime_providers_webnn onnxruntime_common onnx onnx_proto flatbuffers::flatbuffers Boost::boost safeint_interface)
 
   add_dependencies(onnxruntime_providers_webnn onnx ${onnxruntime_EXTERNAL_DEPENDENCIES})
   set_target_properties(onnxruntime_providers_webnn PROPERTIES FOLDER "ONNXRuntime")
diff -up onnxruntime-1.21.1/cmake/onnxruntime_providers_xnnpack.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_providers_xnnpack.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_providers_xnnpack.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_providers_xnnpack.cmake	2025-10-05 19:52:09.415970920 +0200
@@ -13,7 +13,7 @@
   onnxruntime_add_static_library(onnxruntime_providers_xnnpack ${onnxruntime_providers_xnnpack_cc_srcs})
   onnxruntime_add_include_to_target(onnxruntime_providers_xnnpack
     onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} XNNPACK pthreadpool
-    flatbuffers::flatbuffers Boost::mp11 safeint_interface
+    flatbuffers::flatbuffers Boost::boost safeint_interface
   )
 
   # TODO fix stringop-overflow warnings
diff -up onnxruntime-1.21.1/cmake/onnxruntime_session.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_session.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_session.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_session.cmake	2025-10-05 19:58:10.211407402 +0200
@@ -30,7 +30,7 @@ endif()
 source_group(TREE ${REPO_ROOT} FILES ${onnxruntime_session_srcs})
 
 onnxruntime_add_static_library(onnxruntime_session ${onnxruntime_session_srcs})
-onnxruntime_add_include_to_target(onnxruntime_session onnxruntime_common onnxruntime_framework onnxruntime_lora onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::mp11 safeint_interface nlohmann_json::nlohmann_json Eigen3::Eigen)
+onnxruntime_add_include_to_target(onnxruntime_session onnxruntime_common onnxruntime_framework onnxruntime_lora onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers Boost::boost safeint_interface nlohmann_json::nlohmann_json Eigen3::Eigen)
 target_link_libraries(onnxruntime_session PRIVATE onnxruntime_lora)
 if(onnxruntime_ENABLE_INSTRUMENT)
   target_compile_definitions(onnxruntime_session PUBLIC ONNXRUNTIME_ENABLE_INSTRUMENT)
diff -up onnxruntime-1.21.1/cmake/onnxruntime_training.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_training.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_training.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_training.cmake	2025-10-05 19:58:38.342252999 +0200
@@ -30,7 +30,7 @@ list(REMOVE_ITEM onnxruntime_training_sr
 
 onnxruntime_add_static_library(onnxruntime_training ${onnxruntime_training_srcs})
 add_dependencies(onnxruntime_training onnx tensorboard ${onnxruntime_EXTERNAL_DEPENDENCIES})
-onnxruntime_add_include_to_target(onnxruntime_training onnxruntime_common onnx onnx_proto tensorboard ${PROTOBUF_LIB} flatbuffers::flatbuffers re2::re2 Boost::mp11 safeint_interface Eigen3::Eigen)
+onnxruntime_add_include_to_target(onnxruntime_training onnxruntime_common onnx onnx_proto tensorboard ${PROTOBUF_LIB} flatbuffers::flatbuffers re2::re2 Boost::boost safeint_interface Eigen3::Eigen)
 
 # fix event_writer.cc 4100 warning
 if(WIN32)
@@ -73,7 +73,7 @@ if (onnxruntime_BUILD_UNIT_TESTS)
     target_link_libraries(onnxruntime_training_runner PRIVATE Python::Python)
   endif()
 
-  onnxruntime_add_include_to_target(onnxruntime_training_runner onnxruntime_training onnxruntime_framework onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::mp11 safeint_interface Eigen3::Eigen)
+  onnxruntime_add_include_to_target(onnxruntime_training_runner onnxruntime_training onnxruntime_framework onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::boost safeint_interface Eigen3::Eigen)
 
   target_include_directories(onnxruntime_training_runner PRIVATE ${CMAKE_CURRENT_BINARY_DIR} ${ONNXRUNTIME_ROOT} ${ORTTRAINING_ROOT} PUBLIC ${onnxruntime_graph_header})
   target_link_libraries(onnxruntime_training_runner PRIVATE nlohmann_json::nlohmann_json)
@@ -108,7 +108,7 @@ if (onnxruntime_BUILD_UNIT_TESTS)
       "${ORTTRAINING_SOURCE_DIR}/models/mnist/main.cc"
   )
   onnxruntime_add_executable(onnxruntime_training_mnist ${training_mnist_src})
-  onnxruntime_add_include_to_target(onnxruntime_training_mnist onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+  onnxruntime_add_include_to_target(onnxruntime_training_mnist onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::boost safeint_interface)
   target_include_directories(onnxruntime_training_mnist PUBLIC ${CMAKE_CURRENT_BINARY_DIR} ${ONNXRUNTIME_ROOT} ${ORTTRAINING_ROOT} ${CXXOPTS} ${extra_includes} ${onnxruntime_graph_header} ${onnxruntime_exec_src_dir} ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_BINARY_DIR}/onnx onnxruntime_training_runner)
 
   set(ONNXRUNTIME_LIBS
@@ -131,7 +131,7 @@ if (onnxruntime_BUILD_UNIT_TESTS)
       ${ONNXRUNTIME_MLAS_LIBS}
       onnxruntime_common
       onnxruntime_flatbuffers
-      Boost::mp11 safeint_interface Eigen3::Eigen
+      Boost::boost safeint_interface Eigen3::Eigen
   )
 
   if(UNIX AND NOT APPLE)
@@ -150,7 +150,7 @@ if (onnxruntime_BUILD_UNIT_TESTS)
       "${ORTTRAINING_SOURCE_DIR}/models/squeezenet/*.cc"
   )
   onnxruntime_add_executable(onnxruntime_training_squeezenet ${training_squeezene_src})
-  onnxruntime_add_include_to_target(onnxruntime_training_squeezenet onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+  onnxruntime_add_include_to_target(onnxruntime_training_squeezenet onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::boost safeint_interface)
   target_include_directories(onnxruntime_training_squeezenet PUBLIC ${ONNXRUNTIME_ROOT} ${ORTTRAINING_ROOT} ${extra_includes} ${onnxruntime_graph_header} ${onnxruntime_exec_src_dir} ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_BINARY_DIR}/onnx onnxruntime_training_runner)
 
   if(UNIX AND NOT APPLE)
@@ -173,7 +173,7 @@ if (onnxruntime_BUILD_UNIT_TESTS)
     endif()
   endif()
 
-  onnxruntime_add_include_to_target(onnxruntime_training_bert onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+  onnxruntime_add_include_to_target(onnxruntime_training_bert onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::boost safeint_interface)
   target_include_directories(onnxruntime_training_bert PUBLIC ${CMAKE_CURRENT_BINARY_DIR} ${ONNXRUNTIME_ROOT} ${ORTTRAINING_ROOT} ${MPI_CXX_INCLUDE_DIRS} ${CXXOPTS} ${extra_includes} ${onnxruntime_graph_header} ${onnxruntime_exec_src_dir} ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_BINARY_DIR}/onnx onnxruntime_training_runner)
 
   # ROCM provider sources are generated, need to add include directory for generated headers
@@ -197,7 +197,7 @@ if (onnxruntime_BUILD_UNIT_TESTS)
     endif()
   endif()
 
-  onnxruntime_add_include_to_target(onnxruntime_training_pipeline_poc onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::mp11 safeint_interface)
+  onnxruntime_add_include_to_target(onnxruntime_training_pipeline_poc onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} onnxruntime_training flatbuffers::flatbuffers Boost::boost safeint_interface)
   target_include_directories(onnxruntime_training_pipeline_poc PUBLIC ${CMAKE_CURRENT_BINARY_DIR} ${ONNXRUNTIME_ROOT} ${ORTTRAINING_ROOT} ${MPI_CXX_INCLUDE_DIRS} ${CXXOPTS} ${extra_includes} ${onnxruntime_graph_header} ${onnxruntime_exec_src_dir} ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_BINARY_DIR}/onnx onnxruntime_training_runner)
   if (onnxruntime_USE_NCCL)
     target_include_directories(onnxruntime_training_pipeline_poc PRIVATE ${NCCL_INCLUDE_DIRS})
diff -up onnxruntime-1.21.1/cmake/onnxruntime_unittests.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_unittests.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_unittests.cmake.11~	2025-10-05 19:52:09.409120879 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_unittests.cmake	2025-10-05 19:58:56.446408604 +0200
@@ -773,7 +773,7 @@ endif()
 if (onnxruntime_USE_ROCM)
   target_include_directories(onnxruntime_test_utils PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/amdgpu/onnxruntime ${CMAKE_CURRENT_BINARY_DIR}/amdgpu/orttraining)
 endif()
-onnxruntime_add_include_to_target(onnxruntime_test_utils onnxruntime_common onnxruntime_framework onnxruntime_session GTest::gtest GTest::gmock onnx onnx_proto flatbuffers::flatbuffers nlohmann_json::nlohmann_json Boost::mp11 safeint_interface Eigen3::Eigen)
+onnxruntime_add_include_to_target(onnxruntime_test_utils onnxruntime_common onnxruntime_framework onnxruntime_session GTest::gtest GTest::gmock onnx onnx_proto flatbuffers::flatbuffers nlohmann_json::nlohmann_json Boost::boost safeint_interface Eigen3::Eigen)
 if (onnxruntime_USE_DML)
   target_add_dml(onnxruntime_test_utils)
 endif()
@@ -803,7 +803,7 @@ if(NOT IOS)
       target_compile_options(onnx_test_runner_common PRIVATE "/wd4244")
     endif()
     onnxruntime_add_include_to_target(onnx_test_runner_common onnxruntime_common onnxruntime_framework
-            onnxruntime_test_utils onnx onnx_proto re2::re2 flatbuffers::flatbuffers Boost::mp11 safeint_interface Eigen3::Eigen)
+            onnxruntime_test_utils onnx onnx_proto re2::re2 flatbuffers::flatbuffers Boost::boost safeint_interface Eigen3::Eigen)
 
     add_dependencies(onnx_test_runner_common onnx_test_data_proto ${onnxruntime_EXTERNAL_DEPENDENCIES})
     target_include_directories(onnx_test_runner_common PRIVATE ${CMAKE_CURRENT_BINARY_DIR} ${ONNXRUNTIME_ROOT})
@@ -1851,9 +1851,9 @@ if (NOT onnxruntime_MINIMAL_BUILD AND NO
   add_dependencies(test_execution_provider onnxruntime_providers_shared onnx ${ABSEIL_LIBS})
   if (CMAKE_SYSTEM_NAME MATCHES "AIX")
     target_link_options(test_execution_provider PRIVATE -Wl,-brtl -lonnxruntime_providers_shared)
-    target_link_libraries(test_execution_provider PRIVATE ${ABSEIL_LIBS} Boost::mp11)
+    target_link_libraries(test_execution_provider PRIVATE ${ABSEIL_LIBS} Boost::boost)
   else()
-    target_link_libraries(test_execution_provider PRIVATE onnxruntime_providers_shared ${ABSEIL_LIBS} Boost::mp11)
+    target_link_libraries(test_execution_provider PRIVATE onnxruntime_providers_shared ${ABSEIL_LIBS} Boost::boost)
   endif()
   target_include_directories(test_execution_provider PRIVATE $<TARGET_PROPERTY:onnx,INTERFACE_INCLUDE_DIRECTORIES>)
   target_include_directories(test_execution_provider PRIVATE $<TARGET_PROPERTY:onnxruntime_common,INTERFACE_INCLUDE_DIRECTORIES>)
diff -up onnxruntime-1.21.1/cmake/onnxruntime_util.cmake.11~ onnxruntime-1.21.1/cmake/onnxruntime_util.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_util.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_util.cmake	2025-10-05 19:59:12.645582685 +0200
@@ -9,7 +9,7 @@ file(GLOB_RECURSE onnxruntime_util_srcs
 source_group(TREE ${ONNXRUNTIME_ROOT}/core FILES ${onnxruntime_util_srcs})
 
 onnxruntime_add_static_library(onnxruntime_util ${onnxruntime_util_srcs})
-onnxruntime_add_include_to_target(onnxruntime_util onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} Boost::mp11 Eigen3::Eigen)
+onnxruntime_add_include_to_target(onnxruntime_util onnxruntime_common onnx onnx_proto ${PROTOBUF_LIB} Boost::boost Eigen3::Eigen)
 if(UNIX)
     target_compile_options(onnxruntime_util PUBLIC "-Wno-error=comment")
 endif()
diff -up onnxruntime-1.21.1/cmake/winml.cmake.11~ onnxruntime-1.21.1/cmake/winml.cmake
--- onnxruntime-1.21.1/cmake/winml.cmake.11~	2025-04-18 21:12:09.000000000 +0200
+++ onnxruntime-1.21.1/cmake/winml.cmake	2025-10-05 19:59:35.527790337 +0200
@@ -321,7 +321,7 @@ set_target_properties(winml_adapter PROP
 set_target_properties(winml_adapter PROPERTIES CXX_STANDARD_REQUIRED ON)
 
 # Compiler definitions
-onnxruntime_add_include_to_target(winml_adapter onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::mp11 Eigen3::Eigen)
+onnxruntime_add_include_to_target(winml_adapter onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::boost Eigen3::Eigen)
 target_include_directories(winml_adapter PRIVATE ${ONNXRUNTIME_ROOT})
 add_dependencies(winml_adapter ${onnxruntime_EXTERNAL_DEPENDENCIES})
 
@@ -405,7 +405,7 @@ target_include_directories(winml_lib_ima
 target_include_directories(winml_lib_image PRIVATE ${winml_lib_common_dir}/inc)
 target_include_directories(winml_lib_image PRIVATE ${ONNXRUNTIME_ROOT})
 target_include_directories(winml_lib_image PRIVATE ${ONNXRUNTIME_INCLUDE_DIR})                                                        # for status.h
-onnxruntime_add_include_to_target(winml_lib_image onnx onnx_proto ${PROTOBUF_LIB} re2::re2 flatbuffers::flatbuffers Boost::mp11)
+onnxruntime_add_include_to_target(winml_lib_image onnx onnx_proto ${PROTOBUF_LIB} re2::re2 flatbuffers::flatbuffers Boost::boost)
 target_include_directories(winml_lib_image PRIVATE ${ONNXRUNTIME_INCLUDE_DIR}/core/platform/windows)
 target_include_directories(winml_lib_image PRIVATE ${REPO_ROOT}/winml)
 target_include_directories(winml_lib_image PRIVATE ${GSL_INCLUDE_DIR})
@@ -516,7 +516,7 @@ target_include_directories(winml_lib_api
 target_include_directories(winml_lib_api PRIVATE ${ONNXRUNTIME_ROOT})
 target_include_directories(winml_lib_api PRIVATE ${ONNXRUNTIME_ROOT}/core/graph)
 target_include_directories(winml_lib_api PRIVATE ${REPO_ROOT}/winml)
-target_link_libraries(winml_lib_api PRIVATE ${GSL_TARGET} safeint_interface flatbuffers::flatbuffers Boost::mp11 onnx onnx_proto Eigen3::Eigen)
+target_link_libraries(winml_lib_api PRIVATE ${GSL_TARGET} safeint_interface flatbuffers::flatbuffers Boost::boost onnx onnx_proto Eigen3::Eigen)
 
 # Properties
 set_target_properties(winml_lib_api
@@ -602,7 +602,7 @@ target_include_directories(winml_lib_api
 target_include_directories(winml_lib_api_experimental PRIVATE ${REPO_ROOT}/winml)
 target_include_directories(winml_lib_api_experimental PRIVATE ${ONNXRUNTIME_ROOT})
 target_include_directories(winml_lib_api_experimental PRIVATE ${ONNXRUNTIME_ROOT}/core/graph)
-onnxruntime_add_include_to_target(winml_lib_api_experimental PRIVATE ${PROTOBUF_LIB} safeint_interface flatbuffers::flatbuffers Boost::mp11 onnx onnx_proto ${GSL_TARGET} Eigen3::Eigen)
+onnxruntime_add_include_to_target(winml_lib_api_experimental PRIVATE ${PROTOBUF_LIB} safeint_interface flatbuffers::flatbuffers Boost::boost onnx onnx_proto ${GSL_TARGET} Eigen3::Eigen)
 
 # Properties
 set_target_properties(winml_lib_api_experimental
@@ -751,7 +751,7 @@ target_include_directories(winml_dll PRI
 target_include_directories(winml_dll PRIVATE ${ONNXRUNTIME_ROOT}/core/graph)
 
 target_include_directories(winml_dll PRIVATE ${REPO_ROOT}/winml)
-target_link_libraries(winml_dll PRIVATE onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::mp11 ${GSL_TARGET} Eigen3::Eigen)
+target_link_libraries(winml_dll PRIVATE onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::boost ${GSL_TARGET} Eigen3::Eigen)
 target_link_libraries(winml_dll PRIVATE debug Dbghelp)
 # Properties
 set_target_properties(winml_dll
diff -up onnxruntime-1.21.1/cmake/winml_unittests.cmake.11~ onnxruntime-1.21.1/cmake/winml_unittests.cmake
--- onnxruntime-1.21.1/cmake/winml_unittests.cmake.11~	2025-10-05 19:52:09.388000058 +0200
+++ onnxruntime-1.21.1/cmake/winml_unittests.cmake	2025-10-05 19:59:50.059031731 +0200
@@ -273,7 +273,7 @@ target_include_directories(winml_test_ad
 target_include_directories(winml_test_adapter PRIVATE ${ONNXRUNTIME_INCLUDE_DIR})
 target_include_directories(winml_test_adapter PRIVATE ${ONNXRUNTIME_ROOT})
 
-onnxruntime_add_include_to_target(winml_test_adapter onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::mp11)
+onnxruntime_add_include_to_target(winml_test_adapter onnxruntime_common onnxruntime_framework onnx onnx_proto ${PROTOBUF_LIB} flatbuffers::flatbuffers safeint_interface Boost::boost)
 add_dependencies(winml_test_adapter ${onnxruntime_EXTERNAL_DEPENDENCIES})
 target_include_directories(winml_test_adapter PRIVATE ${winml_adapter_dir})
 target_include_directories(winml_test_adapter PRIVATE ${winml_lib_common_dir}/inc)
