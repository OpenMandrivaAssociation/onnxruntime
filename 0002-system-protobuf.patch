diff -up onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake.3~ onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake
--- onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake.3~	2025-10-05 19:44:07.348667989 +0200
+++ onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake	2025-10-05 19:45:32.109468755 +0200
@@ -201,36 +201,10 @@ else()
  set(ONNXRUNTIME_PROTOBUF_PATCH_COMMAND "")
 endif()
 
-#Protobuf depends on absl and utf8_range
-onnxruntime_fetchcontent_declare(
-  Protobuf
-  URL ${DEP_URL_protobuf}
-  URL_HASH SHA1=${DEP_SHA1_protobuf}
-  PATCH_COMMAND ${ONNXRUNTIME_PROTOBUF_PATCH_COMMAND}
-  EXCLUDE_FROM_ALL
-  FIND_PACKAGE_ARGS NAMES Protobuf protobuf
-)
-
-set(protobuf_BUILD_TESTS OFF CACHE BOOL "Build protobuf tests" FORCE)
-#TODO: we'd better to turn the following option off. However, it will cause
-# ".\build.bat --config Debug --parallel --skip_submodule_sync --update" fail with an error message:
-# install(EXPORT "ONNXTargets" ...) includes target "onnx_proto" which requires target "libprotobuf-lite" that is
-# not in any export set.
-#set(protobuf_INSTALL OFF CACHE BOOL "Install protobuf binaries and files" FORCE)
-set(protobuf_USE_EXTERNAL_GTEST ON CACHE BOOL "" FORCE)
-
-if (ANDROID)
-  set(protobuf_WITH_ZLIB OFF CACHE BOOL "Build protobuf with zlib support" FORCE)
-endif()
-
-if (onnxruntime_DISABLE_RTTI)
-  set(protobuf_DISABLE_RTTI ON CACHE BOOL "Remove runtime type information in the binaries" FORCE)
-endif()
-
+find_package(Protobuf REQUIRED)
 include(protobuf_function)
 #protobuf end
 
-onnxruntime_fetchcontent_makeavailable(Protobuf)
 if(Protobuf_FOUND)
   message(STATUS "Using protobuf from find_package(or vcpkg). Protobuf version: ${Protobuf_VERSION}")
 else()
