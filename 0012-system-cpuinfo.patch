diff -up onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake.12~ onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake
--- onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake.12~	2025-10-05 20:00:12.104423324 +0200
+++ onnxruntime-1.21.1/cmake/external/onnxruntime_external_deps.cmake	2025-10-05 20:01:22.169777949 +0200
@@ -324,6 +324,7 @@ if (CPUINFO_SUPPORTED)
   set(CPUINFO_BUILD_UNIT_TESTS OFF CACHE INTERNAL "")
   set(CPUINFO_BUILD_MOCK_TESTS OFF CACHE INTERNAL "")
   set(CPUINFO_BUILD_BENCHMARKS OFF CACHE INTERNAL "")
+  find_package(cpuinfo REQUIRED)
   if (onnxruntime_target_platform STREQUAL "ARM64EC" OR onnxruntime_target_platform STREQUAL "ARM64")
       message(STATUS "Applying a patch for Windows ARM64/ARM64EC in cpuinfo")
       onnxruntime_fetchcontent_declare(
@@ -503,7 +504,7 @@ endif()
 set(onnxruntime_EXTERNAL_LIBRARIES ${onnxruntime_EXTERNAL_LIBRARIES_XNNPACK} nlohmann_json::nlohmann_json
                                    onnx onnx_proto ${PROTOBUF_LIB} re2::re2 Boost::boost safeint_interface
                                    flatbuffers::flatbuffers ${GSL_TARGET} ${ABSEIL_LIBS} date::date
-                                   ${ONNXRUNTIME_CLOG_TARGET_NAME} Eigen3::Eigen)
+                                   Eigen3::Eigen)
 
 # The source code of onnx_proto is generated, we must build this lib first before starting to compile the other source code that uses ONNX protobuf types.
 # The other libs do not have the problem. All the sources are already there. We can compile them in any order.
diff -up onnxruntime-1.21.1/cmake/onnxruntime_common.cmake.12~ onnxruntime-1.21.1/cmake/onnxruntime_common.cmake
--- onnxruntime-1.21.1/cmake/onnxruntime_common.cmake.12~	2025-10-05 20:00:12.076613376 +0200
+++ onnxruntime-1.21.1/cmake/onnxruntime_common.cmake	2025-10-05 20:00:12.111268135 +0200
@@ -212,7 +212,7 @@ if (RISCV64 OR ARM64 OR ARM OR X86 OR X6
     # Its functionality in detecting x86 cpu features are lacking, so is support for Windows.
     if (CPUINFO_SUPPORTED)
       onnxruntime_add_include_to_target(onnxruntime_common cpuinfo::cpuinfo)
-      list(APPEND onnxruntime_EXTERNAL_LIBRARIES cpuinfo::cpuinfo ${ONNXRUNTIME_CLOG_TARGET_NAME})
+      list(APPEND onnxruntime_EXTERNAL_LIBRARIES cpuinfo::cpuinfo)
     endif()
 endif()
 
